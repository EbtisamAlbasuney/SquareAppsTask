{"ast":null,"code":"var _jsxFileName = \"H:\\\\React\\\\AppSquare\\\\first-app\\\\src\\\\components\\\\TableForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TableForm() {\n  _s();\n\n  var _errors$is_mandatory;\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  console.log(watch(\"example\")); //   type=>select from array (typename ,id)\n  // name =>input \n  // is_mandatrory=>checkbox \n  // options =[name =>input , has_comment =>checkbox]\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"name\", {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"This field is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group form-check\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        ...register('is_mandatory'),\n        id: \"is_mandatory\",\n        className: `form-check-input ${errors.is_mandatory ? 'is-invalid' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"is_mandatory\",\n        className: \"form-check-label\",\n        children: \"Is Mandatory?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$is_mandatory = errors.is_mandatory) === null || _errors$is_mandatory === void 0 ? void 0 : _errors$is_mandatory.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"cars\",\n      id: \"cars\",\n      form: \"carform\",\n      ...register(\"type\", {\n        required: true\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"volvo\",\n        children: \"Volvo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"saab\",\n        children: \"Saab\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"opel\",\n        children: \"Opel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"audi\",\n        children: \"Audi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TableForm, \"77WzwRY2adCYNFA0cLnNubMUW6o=\", false, function () {\n  return [useForm];\n});\n\n_c = TableForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableForm\");","map":{"version":3,"sources":["H:/React/AppSquare/first-app/src/components/TableForm.jsx"],"names":["React","useForm","TableForm","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","required","exampleRequired","is_mandatory","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAAA;;AAClC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAA5C,MAA2DN,OAAO,EAAxE;;AACA,QAAMO,QAAQ,GAAGC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAzB;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAAC,SAAD,CAAjB,EAJkC,CAOpC;AACA;AACA;AACA;;AAEE,sBACE;AAAM,IAAA,QAAQ,EAAED,YAAY,CAACI,QAAD,CAA5B;AAAA,4BACE,sBAAYL,QAAQ,CAAC,MAAD,EAAS;AAAES,QAAAA,QAAQ,EAAE;AAAZ,OAAT;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,EAGGL,MAAM,CAACM,eAAP,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAH7B,eAIE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACkB;AAAQ,QAAA,IAAI,EAAC,UAAb;AAAA,WAA4BV,QAAQ,CAAC,cAAD,CAApC;AAAsD,QAAA,EAAE,EAAC,cAAzD;AAAwE,QAAA,SAAS,EAAG,oBAAmBI,MAAM,CAACO,YAAP,GAAsB,YAAtB,GAAqC,EAAG;AAA/I;AAAA;AAAA;AAAA;AAAA,cADlB,eAEkB;AAAO,QAAA,OAAO,EAAC,cAAf;AAA8B,QAAA,SAAS,EAAC,kBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFlB,eAGkB;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,0CAAmCP,MAAM,CAACO,YAA1C,yDAAmC,qBAAqBC;AAAxD;AAAA;AAAA;AAAA;AAAA,cAHlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eASH;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,EAAE,EAAC,MAAvB;AAA8B,MAAA,IAAI,EAAC,SAAnC;AAAA,SAAiDZ,QAAQ,CAAC,MAAD,EAAS;AAAES,QAAAA,QAAQ,EAAE;AAAZ,OAAT,CAAzD;AAAA,8BACC;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD,eAIC;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YATG,eAgBE;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAhCuBV,S;UAC2CD,O;;;KAD3CC,S","sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport default function TableForm() {\r\n  const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n  const onSubmit = data => console.log(data);\r\n\r\n  console.log(watch(\"example\")); \r\n\r\n\r\n//   type=>select from array (typename ,id)\r\n// name =>input \r\n// is_mandatrory=>checkbox \r\n// options =[name =>input , has_comment =>checkbox]\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <input  {...register(\"name\", { required: true } )}/>\r\n      \r\n      {errors.exampleRequired && <span>This field is required</span>}\r\n      <div className=\"form-group form-check\">\r\n                        <input  type=\"checkbox\" {...register('is_mandatory')} id=\"is_mandatory\" className={`form-check-input ${errors.is_mandatory ? 'is-invalid' : ''}`} />\r\n                        <label htmlFor=\"is_mandatory\" className=\"form-check-label\">Is Mandatory?</label>\r\n                        <div className=\"invalid-feedback\">{errors.is_mandatory?.message}</div>\r\n                    </div>\r\n <select name=\"cars\" id=\"cars\" form=\"carform\" {...register(\"type\", { required: true } )}>\r\n  <option value=\"volvo\">Volvo</option>\r\n  <option value=\"saab\">Saab</option>\r\n  <option value=\"opel\">Opel</option>\r\n  <option value=\"audi\">Audi</option>\r\n</select>\r\n      \r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}