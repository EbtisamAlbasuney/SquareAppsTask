{"ast":null,"code":"var _jsxFileName = \"H:\\\\React\\\\AppSquare\\\\first-app\\\\src\\\\components\\\\TableForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm, useFieldArray } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TableForm() {\n  _s();\n\n  var _errors$is_mandatory;\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    },\n    control\n  } = useForm();\n  const {\n    fields,\n    append,\n    prepend,\n    remove,\n    swap,\n    move,\n    insert\n  } = useFieldArray({\n    control,\n    name: \"options\"\n  }); //   const onSubmit = async (data) => {\n  //     const response = await axios.post(`http://localhost:3001/data`);\n  //     const data = await response.data;\n  //   };\n\n  console.log(watch(\"example\")); //   type=>select from array (typename ,id)\n  // name =>input\n  // is_mandatrory=>checkbox\n  // options =[name =>input , has_comment =>checkbox]\n\n  const arrType = [{\n    value: 1,\n    label: \"TYPE_STRING \"\n  }, {\n    value: 2,\n    label: \"TYPE_TEXT \"\n  }, {\n    value: 3,\n    label: \"TYPE_NUMBER \"\n  }, {\n    value: 4,\n    label: \"TYPE_DROPLIST \"\n  }, {\n    value: 5,\n    label: \"TYPE_CHECKBOX \"\n  }, {\n    value: 6,\n    label: \"TYPE_RADIO \"\n  }, {\n    value: 7,\n    label: \"TYPE_FILE \"\n  }, {\n    value: 8,\n    label: \"TYPE_IMAGE \"\n  }, {\n    value: 9,\n    label: \"TYPE_DATE_HIJRI  \"\n  }, {\n    value: 10,\n    label: \" TYPE_DATE \"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"name\", {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"This field is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group form-check\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        ...register(\"is_mandatory\"),\n        id: \"is_mandatory\",\n        className: `form-check-input ${errors.is_mandatory ? \"is-invalid\" : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"is_mandatory\",\n        className: \"form-check-label\",\n        children: \"Is Mandatory?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$is_mandatory = errors.is_mandatory) === null || _errors$is_mandatory === void 0 ? void 0 : _errors$is_mandatory.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"cars\",\n      id: \"cars\",\n      form: \"carform\",\n      ...register(\"type\", {\n        required: true\n      }),\n      children: arrType === null || arrType === void 0 ? void 0 : arrType.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item === null || item === void 0 ? void 0 : item.value,\n          children: item === null || item === void 0 ? void 0 : item.label\n        }, item.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => append({\n        firstName: \"bill\",\n        lastName: \"luo\"\n      }),\n      children: \"Add Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), fields.map((field, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(`options.${index}.name`)\n      }, field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        ...register(`options.${index}.has_comment`)\n      }, field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"has_comment\",\n        className: \"form-check-label\",\n        children: \"Has comment?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)), \");\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TableForm, \"pxPRVzMTtzx9EHjg1tu1bMezmWI=\", false, function () {\n  return [useForm, useFieldArray];\n});\n\n_c = TableForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableForm\");","map":{"version":3,"sources":["H:/React/AppSquare/first-app/src/components/TableForm.jsx"],"names":["React","useForm","useFieldArray","TableForm","register","handleSubmit","watch","formState","errors","control","fields","append","prepend","remove","swap","move","insert","name","console","log","arrType","value","label","onSubmit","required","exampleRequired","is_mandatory","message","map","item","firstName","lastName","field","index","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useForm, useFieldArray } from \"react-hook-form\";\r\n\r\nexport default function TableForm() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n    control,\r\n  } = useForm();\r\n  const { fields, append, prepend, remove, swap, move, insert } = useFieldArray(\r\n    {\r\n      control,\r\n      name: \"options\",\r\n    }\r\n  );\r\n//   const onSubmit = async (data) => {\r\n//     const response = await axios.post(`http://localhost:3001/data`);\r\n//     const data = await response.data;\r\n//   };\r\n\r\n  console.log(watch(\"example\"));\r\n\r\n  //   type=>select from array (typename ,id)\r\n  // name =>input\r\n  // is_mandatrory=>checkbox\r\n  // options =[name =>input , has_comment =>checkbox]\r\n\r\n  const arrType = [\r\n    { value: 1, label: \"TYPE_STRING \" },\r\n    { value: 2, label: \"TYPE_TEXT \" },\r\n    { value: 3, label: \"TYPE_NUMBER \" },\r\n    { value: 4, label: \"TYPE_DROPLIST \" },\r\n    { value: 5, label: \"TYPE_CHECKBOX \" },\r\n    { value: 6, label: \"TYPE_RADIO \" },\r\n    { value: 7, label: \"TYPE_FILE \" },\r\n    { value: 8, label: \"TYPE_IMAGE \" },\r\n    { value: 9, label: \"TYPE_DATE_HIJRI  \" },\r\n    { value: 10, label: \" TYPE_DATE \" },\r\n  ];\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <input {...register(\"name\", { required: true })} />\r\n      {errors.exampleRequired && <span>This field is required</span>}\r\n      <div className=\"form-group form-check\">\r\n        <input\r\n          type=\"checkbox\"\r\n          {...register(\"is_mandatory\")}\r\n          id=\"is_mandatory\"\r\n          className={`form-check-input ${\r\n            errors.is_mandatory ? \"is-invalid\" : \"\"\r\n          }`}\r\n        />\r\n        <label htmlFor=\"is_mandatory\" className=\"form-check-label\">\r\n          Is Mandatory?\r\n        </label>\r\n        <div className=\"invalid-feedback\">{errors.is_mandatory?.message}</div>\r\n      </div>\r\n      <select\r\n        name=\"cars\"\r\n        id=\"cars\"\r\n        form=\"carform\"\r\n        {...register(\"type\", { required: true })}\r\n      >\r\n        {arrType?.map((item) => {\r\n          return (\r\n            <option key={item.value} value={item?.value}>\r\n              {item?.label}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => append({ firstName: \"bill\", lastName: \"luo\" })}\r\n      >\r\n        Add Options\r\n      </button>\r\n      {fields.map((field, index) => (\r\n        <>\r\n          <input\r\n            key={field.id} // important to include key with field's id\r\n            {...register(`options.${index}.name`)}\r\n          />\r\n          <input\r\n            type=\"checkbox\"\r\n            key={field.id} // important to include key with field's id\r\n            {...register(`options.${index}.has_comment`)}\r\n          />\r\n          <label htmlFor=\"has_comment\" className=\"form-check-label\">\r\n            Has comment?\r\n          </label>\r\n        </>\r\n      ))}\r\n      );\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}