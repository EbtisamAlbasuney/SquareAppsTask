{"ast":null,"code":"var _jsxFileName = \"H:\\\\React\\\\AppSquare\\\\first-app\\\\src\\\\components\\\\TableForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm, useFieldArray, control } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TableForm() {\n  _s();\n\n  var _errors$is_mandatory;\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    fields,\n    append,\n    prepend,\n    remove,\n    swap,\n    move,\n    insert\n  } = useFieldArray({\n    control,\n    name: \"options\"\n  });\n\n  const onSubmit = data => console.log(data);\n\n  console.log(watch(\"example\")); //   type=>select from array (typename ,id)\n  // name =>input \n  // is_mandatrory=>checkbox \n  // options =[name =>input , has_comment =>checkbox]\n\n  const arrType = [{\n    value: 1,\n    label: \"TYPE_STRING \"\n  }, {\n    value: 2,\n    label: \"TYPE_TEXT \"\n  }, {\n    value: 3,\n    label: \"TYPE_NUMBER \"\n  }, {\n    value: 4,\n    label: \"TYPE_DROPLIST \"\n  }, {\n    value: 5,\n    label: \"TYPE_CHECKBOX \"\n  }, {\n    value: 6,\n    label: \"TYPE_RADIO \"\n  }, {\n    value: 7,\n    label: \"TYPE_FILE \"\n  }, {\n    value: 8,\n    label: \"TYPE_IMAGE \"\n  }, {\n    value: 9,\n    label: \"TYPE_DATE_HIJRI  \"\n  }, {\n    value: 10,\n    label: \" TYPE_DATE \"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"name\", {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"This field is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group form-check\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        ...register('is_mandatory'),\n        id: \"is_mandatory\",\n        className: `form-check-input ${errors.is_mandatory ? 'is-invalid' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"is_mandatory\",\n        className: \"form-check-label\",\n        children: \"Is Mandatory?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$is_mandatory = errors.is_mandatory) === null || _errors$is_mandatory === void 0 ? void 0 : _errors$is_mandatory.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"cars\",\n      id: \"cars\",\n      form: \"carform\",\n      ...register(\"type\", {\n        required: true\n      }),\n      children: arrType === null || arrType === void 0 ? void 0 : arrType.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item === null || item === void 0 ? void 0 : item.value,\n          children: item === null || item === void 0 ? void 0 : item.label\n        }, item.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 2\n    }, this), fields.map((field, index) => /*#__PURE__*/_jsxDEV(\"input\", { ...register(`test.${index}.value`)\n    }, field.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)), \");\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TableForm, \"k2r/CbjH92rpl8hT/xVWi+sbsDU=\", false, function () {\n  return [useForm, useFieldArray];\n});\n\n_c = TableForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableForm\");","map":{"version":3,"sources":["H:/React/AppSquare/first-app/src/components/TableForm.jsx"],"names":["React","useForm","useFieldArray","control","TableForm","register","handleSubmit","watch","formState","errors","fields","append","prepend","remove","swap","move","insert","name","onSubmit","data","console","log","arrType","value","label","required","exampleRequired","is_mandatory","message","map","item","field","index","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useForm,useFieldArray,control } from \"react-hook-form\";\r\n\r\nexport default function TableForm() {\r\n  const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n  const { fields, append, prepend, remove, swap, move, insert } = useFieldArray({\r\n    control,\r\n    name: \"options\", \r\n  });\r\n  const onSubmit = data => console.log(data);\r\n\r\n\r\n  console.log(watch(\"example\")); \r\n\r\n\r\n//   type=>select from array (typename ,id)\r\n// name =>input \r\n// is_mandatrory=>checkbox \r\n// options =[name =>input , has_comment =>checkbox]\r\n\r\nconst arrType = [\r\n    {value : 1 , label : \"TYPE_STRING \"},\r\n    {value :  2, label : \"TYPE_TEXT \"},\r\n    {value : 3, label : \"TYPE_NUMBER \"},\r\n    {value : 4 , label : \"TYPE_DROPLIST \"},\r\n    {value : 5 , label : \"TYPE_CHECKBOX \"},\r\n    {value : 6, label : \"TYPE_RADIO \"},\r\n    {value : 7 , label : \"TYPE_FILE \"},\r\n    {value : 8 , label : \"TYPE_IMAGE \"},\r\n    {value : 9 , label : \"TYPE_DATE_HIJRI  \"},\r\n    {value : 10 , label : \" TYPE_DATE \"}\r\n\r\n\r\n]\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <input  {...register(\"name\", { required: true } )}/>\r\n      \r\n      {errors.exampleRequired && <span>This field is required</span>}\r\n      <div className=\"form-group form-check\">\r\n                        <input  type=\"checkbox\" {...register('is_mandatory')} id=\"is_mandatory\" className={`form-check-input ${errors.is_mandatory ? 'is-invalid' : ''}`} />\r\n                        <label htmlFor=\"is_mandatory\" className=\"form-check-label\">Is Mandatory?</label>\r\n                        <div className=\"invalid-feedback\">{errors.is_mandatory?.message}</div>\r\n                    </div>\r\n <select name=\"cars\" id=\"cars\" form=\"carform\" {...register(\"type\", { required: true } )}>\r\n  {arrType?.map(item=>{\r\n      return <option key={item.value} value={item?.value}>{item?.label}</option>\r\n  })}\r\n</select>\r\n{fields.map((field, index) => (\r\n      <input\r\n        key={field.id} // important to include key with field's id\r\n        {...register(`test.${index}.value`)} \r\n      />\r\n    ))}\r\n  );\r\n      \r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}